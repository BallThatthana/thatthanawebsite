{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport { store } from './Store/vuex';\nimport Home from './components/FrontPage/home.vue';\nimport Contact from './components/FrontPage/contact.vue';\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: '/',\n    component: Home,\n    name: 'home',\n    meta: {\n      requiresAuth: true\n    }\n  }, {\n    path: '/contact',\n    component: Contact,\n    name: 'contact',\n    meta: {\n      requiresAuth: true\n    }\n  }]\n});\nrouter.beforeEach(async (to, from, next) => {\n  if (to.meta.requiresAuth) {\n    if (store.getters['auth/isAuth']) {\n      next();\n    } else {\n      const autoSignInSuccess = await store.dispatch('autosignin', payload);\n      if (autoSignInSuccess) {\n        next();\n      } else {\n        next('/home');\n      }\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","Home","Contact","router","history","routes","path","component","name","meta","requiresAuth","beforeEach","to","from","next","getters","autoSignInSuccess","dispatch","payload"],"sources":["C:/Users/Ball/OneDrive/Documents/Web dev/own-website/src/routes.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\r\nimport { store } from './Store/vuex'\r\nimport Home from './components/FrontPage/home.vue'\r\nimport Contact from './components/FrontPage/contact.vue'\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      component: Home,\r\n      name: 'home',\r\n      meta: { requiresAuth: true },\r\n    },\r\n    { \r\n        path: '/contact', \r\n        component: Contact, \r\n        name: 'contact',\r\n        meta: { requiresAuth: true },\r\n      \r\n    }\r\n  ]\r\n});\r\n\r\nrouter.beforeEach(async (to, from, next)=>{\r\n  if(to.meta.requiresAuth){\r\n    if(store.getters['auth/isAuth']){\r\n      next();\r\n    } else {\r\n      const autoSignInSuccess = await store.dispatch('autosignin', payload);\r\n      if(autoSignInSuccess){\r\n        next();\r\n      } else {\r\n        next('/home')\r\n      }\r\n    } \r\n  } else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,SAASC,KAAK,QAAQ,cAAc;AACpC,OAAOC,IAAI,MAAM,iCAAiC;AAClD,OAAOC,OAAO,MAAM,oCAAoC;AAExD,MAAMC,MAAM,GAAGL,YAAY,CAAC;EAC1BM,OAAO,EAAEL,gBAAgB,EAAE;EAC3BM,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,SAAS,EAAEN,IAAI;IACfO,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK;EAC7B,CAAC,EACD;IACIJ,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAEL,OAAO;IAClBM,IAAI,EAAE,SAAS;IACfC,IAAI,EAAE;MAAEC,YAAY,EAAE;IAAK;EAE/B,CAAC;AAEL,CAAC,CAAC;AAEFP,MAAM,CAACQ,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAG;EACxC,IAAGF,EAAE,CAACH,IAAI,CAACC,YAAY,EAAC;IACtB,IAAGV,KAAK,CAACe,OAAO,CAAC,aAAa,CAAC,EAAC;MAC9BD,IAAI,EAAE;IACR,CAAC,MAAM;MACL,MAAME,iBAAiB,GAAG,MAAMhB,KAAK,CAACiB,QAAQ,CAAC,YAAY,EAAEC,OAAO,CAAC;MACrE,IAAGF,iBAAiB,EAAC;QACnBF,IAAI,EAAE;MACR,CAAC,MAAM;QACLA,IAAI,CAAC,OAAO,CAAC;MACf;IACF;EACF,CAAC,MAAM;IACLA,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,eAAeX,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}