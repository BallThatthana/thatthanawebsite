{"ast":null,"code":"import { signInWithEmailAndPassword } from 'firebase/auth';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { db, auth } from '../../firebase';\nconst AuthModule = {\n  state: {\n    food: '',\n    post: '',\n    email: '',\n    password: '',\n    userId: '',\n    isLogIn: false\n  },\n  mutations: {\n    setFood(state, value) {\n      state.food = value;\n    },\n    setLogIn(state, email, password) {\n      state.isLogIn = true;\n      state.email = email;\n      state.password = password;\n    }\n  },\n  actions: {\n    async signIn({\n      state,\n      commit\n    }) {\n      await signInWithEmailAndPassword(auth, state.email, state.password);\n      state.userId = auth.currentUser.uid;\n      commit('setLogIn');\n    },\n    postFood() {\n      const post = {\n        food: this.food,\n        userId: this.$store.getters.userId,\n        timestamp: new Date().getTime()\n      };\n      addDoc(collection(db, 'posts'), post).then(() => {\n        console.log('Post added successfully');\n        // reset the food input field\n        this.food = '';\n        // update the food state in Vuex\n        this.$store.dispatch('setFood', '');\n      }).catch(error => {\n        console.error('Error adding post: ', error);\n      });\n    }\n  },\n  getters: {\n    food: state => state.food,\n    post: state => state.post,\n    email: state => state.email,\n    password: state => state.password,\n    isLogIn: state => state.isLogIn\n  }\n};\nexport default AuthModule;","map":{"version":3,"names":["signInWithEmailAndPassword","collection","addDoc","db","auth","AuthModule","state","food","post","email","password","userId","isLogIn","mutations","setFood","value","setLogIn","actions","signIn","commit","currentUser","uid","postFood","$store","getters","timestamp","Date","getTime","then","console","log","dispatch","catch","error"],"sources":["C:/Users/Ball/OneDrive/Documents/Web dev/own-website/src/Store/auth/index.js"],"sourcesContent":["import {\r\n    signInWithEmailAndPassword\r\n} from 'firebase/auth';\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { db, auth } from '../../firebase';\r\n\r\nconst AuthModule = {\r\n    state:{ \r\n        food:'',\r\n        post:'',\r\n        email:'',\r\n        password:'',\r\n        userId:'',\r\n        isLogIn: false\r\n    },\r\n    mutations:{\r\n        setFood(state,value){\r\n            state.food = value\r\n        },\r\n        setLogIn(state, email, password){\r\n            state.isLogIn = true;\r\n            state.email = email;\r\n            state.password = password;\r\n        }\r\n    },\r\n    actions:{\r\n        async signIn({ state, commit }){\r\n            await signInWithEmailAndPassword(auth, state.email, state.password);\r\n            state.userId = auth.currentUser.uid\r\n            commit('setLogIn')\r\n        },\r\n        postFood() {\r\n            const post = {\r\n              food: this.food,\r\n              userId: this.$store.getters.userId,\r\n              timestamp: new Date().getTime()\r\n            };\r\n            addDoc(collection(db, 'posts'), post)\r\n              .then(() => {\r\n                console.log('Post added successfully');\r\n                // reset the food input field\r\n                this.food = '';\r\n                // update the food state in Vuex\r\n                this.$store.dispatch('setFood', '');\r\n              })\r\n              .catch((error) => {\r\n                console.error('Error adding post: ', error);\r\n              });\r\n          }\r\n    },\r\n    getters:{\r\n        food: state => state.food,\r\n        post: state => state.post,\r\n        email: state => state.email,\r\n        password: state  => state.password,\r\n        isLogIn: state => state.isLogIn\r\n    }\r\n}\r\n\r\nexport default AuthModule;"],"mappings":"AAAA,SACIA,0BAA0B,QACvB,eAAe;AACtB,SAASC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AACvD,SAASC,EAAE,EAAEC,IAAI,QAAQ,gBAAgB;AAEzC,MAAMC,UAAU,GAAG;EACfC,KAAK,EAAC;IACFC,IAAI,EAAC,EAAE;IACPC,IAAI,EAAC,EAAE;IACPC,KAAK,EAAC,EAAE;IACRC,QAAQ,EAAC,EAAE;IACXC,MAAM,EAAC,EAAE;IACTC,OAAO,EAAE;EACb,CAAC;EACDC,SAAS,EAAC;IACNC,OAAOA,CAACR,KAAK,EAACS,KAAK,EAAC;MAChBT,KAAK,CAACC,IAAI,GAAGQ,KAAK;IACtB,CAAC;IACDC,QAAQA,CAACV,KAAK,EAAEG,KAAK,EAAEC,QAAQ,EAAC;MAC5BJ,KAAK,CAACM,OAAO,GAAG,IAAI;MACpBN,KAAK,CAACG,KAAK,GAAGA,KAAK;MACnBH,KAAK,CAACI,QAAQ,GAAGA,QAAQ;IAC7B;EACJ,CAAC;EACDO,OAAO,EAAC;IACJ,MAAMC,MAAMA,CAAC;MAAEZ,KAAK;MAAEa;IAAO,CAAC,EAAC;MAC3B,MAAMnB,0BAA0B,CAACI,IAAI,EAAEE,KAAK,CAACG,KAAK,EAAEH,KAAK,CAACI,QAAQ,CAAC;MACnEJ,KAAK,CAACK,MAAM,GAAGP,IAAI,CAACgB,WAAW,CAACC,GAAG;MACnCF,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC;IACDG,QAAQA,CAAA,EAAG;MACP,MAAMd,IAAI,GAAG;QACXD,IAAI,EAAE,IAAI,CAACA,IAAI;QACfI,MAAM,EAAE,IAAI,CAACY,MAAM,CAACC,OAAO,CAACb,MAAM;QAClCc,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO;MAC/B,CAAC;MACDzB,MAAM,CAACD,UAAU,CAACE,EAAE,EAAE,OAAO,CAAC,EAAEK,IAAI,CAAC,CAClCoB,IAAI,CAAC,MAAM;QACVC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtC;QACA,IAAI,CAACvB,IAAI,GAAG,EAAE;QACd;QACA,IAAI,CAACgB,MAAM,CAACQ,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC;MACrC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CAAC;IACN;EACN,CAAC;EACDT,OAAO,EAAC;IACJjB,IAAI,EAAED,KAAK,IAAIA,KAAK,CAACC,IAAI;IACzBC,IAAI,EAAEF,KAAK,IAAIA,KAAK,CAACE,IAAI;IACzBC,KAAK,EAAEH,KAAK,IAAIA,KAAK,CAACG,KAAK;IAC3BC,QAAQ,EAAEJ,KAAK,IAAKA,KAAK,CAACI,QAAQ;IAClCE,OAAO,EAAEN,KAAK,IAAIA,KAAK,CAACM;EAC5B;AACJ,CAAC;AAED,eAAeP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}