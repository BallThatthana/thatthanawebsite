{"ast":null,"code":"import { createRouter, createWebHistory } from \"vue-router\";\nimport store from './Store/index.js';\nimport Home from './components/FrontPage/home.vue';\nimport Contact from './components/FrontPage/contact.vue';\nimport Login from './components/User/signup.vue';\nconst routes = [{\n  path: '/',\n  component: Home,\n  name: 'home',\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/login',\n  component: Login,\n  name: 'login',\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/contact',\n  component: Contact,\n  name: 'contact',\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach(async (to, from, next) => {\n  const isAuthenticated = store.getters['auth/isAuth'];\n  if (to.meta.requiresAuth && !isAuthenticated) {\n    next({\n      name: 'login'\n    }); // Redirect to login if route requires authentication and user is not authenticated\n  } else if (to.meta.requiresAuth && isAuthenticated) {\n    // If the route requires authentication and the user is authenticated,\n    // you can add additional logic here to verify the authentication status\n    // and handle any necessary redirection or actions before allowing navigation\n    try {\n      // Example: Check if the user token is still valid\n      await store.dispatch('auth/checkTokenValidity');\n      next(); // Continue navigation\n    } catch (error) {\n      console.error('Error:', error);\n      next({\n        name: 'login'\n      }); // Redirect to login if token is not valid or any other error occurs\n    }\n  } else {\n    next(); // Continue navigation for routes that don't require authentication\n  }\n});\n\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","Home","Contact","Login","routes","path","component","name","meta","requiresAuth","router","history","beforeEach","to","from","next","isAuthenticated","getters","dispatch","error","console"],"sources":["C:/Users/Ball/OneDrive/Documents/Web dev/own-website/src/routes.js"],"sourcesContent":["import { createRouter, createWebHistory } from \"vue-router\";\r\nimport store from './Store/index.js';\r\nimport Home from './components/FrontPage/home.vue';\r\nimport Contact from './components/FrontPage/contact.vue';\r\nimport Login from './components/User/signup.vue';\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: Home,\r\n    name: 'home',\r\n    meta: { requiresAuth: true },\r\n  },\r\n  {\r\n    path: '/login',\r\n    component: Login,\r\n    name: 'login',\r\n    meta: { requiresAuth: false },\r\n  },\r\n  { \r\n    path: '/contact', \r\n    component: Contact, \r\n    name: 'contact',\r\n    meta: { requiresAuth: true },\r\n  }\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach(async (to, from, next) => {\r\n  const isAuthenticated = store.getters['auth/isAuth'];\r\n\r\n  if (to.meta.requiresAuth && !isAuthenticated) {\r\n    next({ name: 'login' }); // Redirect to login if route requires authentication and user is not authenticated\r\n  } else if (to.meta.requiresAuth && isAuthenticated) {\r\n    // If the route requires authentication and the user is authenticated,\r\n    // you can add additional logic here to verify the authentication status\r\n    // and handle any necessary redirection or actions before allowing navigation\r\n    try {\r\n      // Example: Check if the user token is still valid\r\n      await store.dispatch('auth/checkTokenValidity');\r\n      next(); // Continue navigation\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      next({ name: 'login' }); // Redirect to login if token is not valid or any other error occurs\r\n    }\r\n  } else {\r\n    next(); // Continue navigation for routes that don't require authentication\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,IAAI,MAAM,iCAAiC;AAClD,OAAOC,OAAO,MAAM,oCAAoC;AACxD,OAAOC,KAAK,MAAM,8BAA8B;AAEhD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,SAAS,EAAEL,IAAI;EACfM,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEH,KAAK;EAChBI,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEJ,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEJ,OAAO;EAClBK,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,gBAAgB,EAAE;EAC3BK;AACF,CAAC,CAAC;AAEFM,MAAM,CAACE,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,MAAMC,eAAe,GAAGhB,KAAK,CAACiB,OAAO,CAAC,aAAa,CAAC;EAEpD,IAAIJ,EAAE,CAACL,IAAI,CAACC,YAAY,IAAI,CAACO,eAAe,EAAE;IAC5CD,IAAI,CAAC;MAAER,IAAI,EAAE;IAAQ,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,MAAM,IAAIM,EAAE,CAACL,IAAI,CAACC,YAAY,IAAIO,eAAe,EAAE;IAClD;IACA;IACA;IACA,IAAI;MACF;MACA,MAAMhB,KAAK,CAACkB,QAAQ,CAAC,yBAAyB,CAAC;MAC/CH,IAAI,EAAE,CAAC,CAAC;IACV,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BJ,IAAI,CAAC;QAAER,IAAI,EAAE;MAAQ,CAAC,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC,MAAM;IACLQ,IAAI,EAAE,CAAC,CAAC;EACV;AACF,CAAC,CAAC;;AAEF,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}