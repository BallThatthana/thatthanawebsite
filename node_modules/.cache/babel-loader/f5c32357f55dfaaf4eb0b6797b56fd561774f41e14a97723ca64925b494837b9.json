{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable */\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nimport { db, auth } from '../../firebase';\nconst DEFAULT_USER = {\n  uid: null,\n  email: null,\n  firstname: null,\n  lastname: null,\n  isAdmin: null\n};\nconst authModule = {\n  state() {\n    return {\n      user: DEFAULT_USER,\n      auth: false\n    };\n  },\n  getters: {\n    isAuth(state) {\n      if (state.auth) {\n        return true;\n      }\n      ;\n      return false;\n    },\n    getUserData(state) {\n      return state.user;\n    }\n  },\n  mutations: {\n    setUser(state, payload) {\n      state.user = {\n        ...state.user,\n        ...payload\n      };\n      state.auth = true;\n    },\n    clearUser(state) {\n      state.user = DEFAULT_USER;\n      state.auth = false;\n    },\n    auth(state) {\n      return state.auth;\n    }\n  },\n  actions: {\n    async signOut({\n      commit\n    }) {\n      try {\n        await auth.signOut();\n        commit('clearUser');\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async autosign({\n      commit,\n      dispatch\n    }, payload) {\n      try {\n        const userData = await dispatch('auth/getUserProfile', payload.uid);\n        commit('setUser', userData);\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getUserProfile({\n      commit\n    }, payload) {\n      try {\n        const docSnap = await getDoc(doc(db, 'users', payload));\n        if (docSnap.exists()) {\n          return docSnap.data();\n        } else {\n          return null;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async signin({\n      commit,\n      dispatch\n    }, payload) {\n      const {\n        email,\n        password\n      } = payload;\n      try {\n        const userCredential = await signInWithEmailAndPassword(auth, email, password);\n        const userData = await dispatch('getUserProfile', userCredential.user.uid);\n        commit('setUser', userData);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async signup({\n      commit\n    }, payload) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, payload.email, payload.password);\n        const newUser = {\n          uid: userCredential.user.uid,\n          email: userCredential.user.email,\n          isAdmin: false /// warning -  cloud function\n        };\n\n        await setDoc(doc(db, 'users', userCredential.user.uid), newUser);\n        commit('setUser', newUser);\n        router.push('/user/dashboard');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};\nexport default authModule;","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","doc","setDoc","getDoc","db","auth","DEFAULT_USER","uid","email","firstname","lastname","isAdmin","authModule","state","user","getters","isAuth","getUserData","mutations","setUser","payload","clearUser","actions","signOut","commit","error","console","log","autosign","dispatch","userData","getUserProfile","docSnap","exists","data","signin","password","userCredential","signup","newUser","router","push"],"sources":["C:/Users/Ball/OneDrive/Documents/Web dev/own-website/src/Store/auth/index.js"],"sourcesContent":["\r\n/* eslint-disable */\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword\r\n} from 'firebase/auth';\r\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\r\nimport { db, auth } from '../../firebase';\r\n\r\n\r\nconst DEFAULT_USER = {\r\n    uid:null,\r\n    email:null,\r\n    firstname:null,\r\n    lastname:null,\r\n    isAdmin:null\r\n}\r\n\r\n\r\nconst authModule = {\r\n    state(){\r\n        return {\r\n            user:DEFAULT_USER,\r\n            auth: false\r\n        }   \r\n    },\r\n    getters:{\r\n        isAuth(state){\r\n            if(state.auth) { return true};\r\n            return false\r\n        },\r\n        getUserData(state){\r\n            return state.user;\r\n        },\r\n    },\r\n    mutations:{\r\n        setUser(state,payload){\r\n            state.user = {\r\n                ...state.user,\r\n                ...payload\r\n            }\r\n            state.auth = true;\r\n        },\r\n        clearUser(state){\r\n            state.user = DEFAULT_USER;\r\n            state.auth = false;\r\n        },\r\n        auth(state) {\r\n            return state.auth;\r\n          }\r\n    },\r\n    actions:{\r\n        async signOut({commit}){\r\n            try{\r\n                await auth.signOut();\r\n                commit('clearUser');\r\n            } catch(error){\r\n                console.log(error)\r\n            }\r\n        },\r\n        async autosign({commit,dispatch},payload){\r\n            try {\r\n                const userData = await dispatch('auth/getUserProfile',payload.uid);\r\n                commit('setUser', userData);\r\n                return true;\r\n            } catch(error){\r\n                console.log(error)\r\n            }\r\n        },\r\n        async getUserProfile({commit},payload){\r\n            try{\r\n                const docSnap = await getDoc(doc(db,'users',payload));\r\n\r\n                if(docSnap.exists()){\r\n                    return docSnap.data();\r\n                } else {\r\n                    return null\r\n                }\r\n            } catch(error){\r\n                console.log(error)\r\n            }\r\n        },\r\n        async signin({commit,dispatch},payload){\r\n\r\n            const { email, password} = payload\r\n\r\n            try {\r\n                const userCredential = await signInWithEmailAndPassword(\r\n                    auth,\r\n                    email,\r\n                    password\r\n                );\r\n                \r\n                const userData = await dispatch('getUserProfile',userCredential.user.uid);\r\n                commit('setUser',userData);         \r\n            } catch(error){\r\n                console.log(error)     \r\n            }\r\n        },\r\n        async signup({commit},payload){\r\n            try{\r\n        \r\n                const userCredential = await createUserWithEmailAndPassword(\r\n                    auth,\r\n                    payload.email,\r\n                    payload.password\r\n                );\r\n\r\n                const newUser = {\r\n                    uid:userCredential.user.uid,\r\n                    email:userCredential.user.email,\r\n                    isAdmin:false /// warning -  cloud function\r\n                }\r\n                await setDoc(doc(db,'users',userCredential.user.uid),newUser);\r\n                commit('setUser',newUser);\r\n                router.push('/user/dashboard');    \r\n            }catch(error){\r\n                console.log(error)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default authModule;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}