{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Topbar = _resolveComponent(\"Topbar\");\n  const _component_Banner = _resolveComponent(\"Banner\");\n  const _component_Portfolio = _resolveComponent(\"Portfolio\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Topbar), _createVNode(_component_Banner), _createVNode(_component_Portfolio)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createVNode","_component_Topbar","_component_Banner","_component_Portfolio"],"sources":["C:\\Users\\Ball\\OneDrive\\Documents\\Web dev\\own-website\\src\\components\\FrontPage\\home.vue"],"sourcesContent":["<template>\r\n     <Topbar/>\r\n     <Banner/>\r\n     <Portfolio/>\r\n </template>\r\n \r\n <script>\r\n import { mapGetters } from 'vuex';\r\n import Topbar from './topbar.vue'\r\n import Banner from './banner.vue'\r\n import Portfolio from './portfolio.vue'\r\n \r\n export default {\r\n     components:{\r\n         Topbar,\r\n         Banner,\r\n         Portfolio\r\n     },\r\n     computed:{\r\n         ...mapGetters(['isAuth']),\r\n         showLogin(){\r\n             return !this.isAuth;\r\n         }\r\n     },\r\n     async beforeMount(){\r\n    try {\r\n      let { ip } = await this.$axios.$get('/api/v1/utils/ip-address')\r\n      let eventData = {\r\n        content_type: 'package page',\r\n        contents: [],\r\n        //client_ip_address: ip,\r\n        client_user_agent: navigator.userAgent,\r\n        // email: this.hashing(this.user.email), ip\r\n        // phone_number: this.hashing(this.user.phone),\r\n      }\r\n      this.loadTikTokPixel(eventData)\r\n      await this.trackTikTokEvent('PageView',0,eventData, ip)\r\n    } catch(err){ console.log(err)}\r\n  },\r\n  methods: {\r\n    async hashing(data) {\r\n      return crypto.createHash('sha256').update(data).digest('hex')\r\n    },\r\n    async loadTikTokPixel(eventData) {\r\n      // Load the TikTok Pixel script dynamically\r\n      const script = document.createElement('script');\r\n      script.src = `https://analytics.tiktok.com/i18n/pixel/sdk.js?sdkid=${this.$config.TIKTOK_PIXEL}`;\r\n      script.async = true;\r\n      document.head.appendChild(script);\r\n      \r\n      // Call the tiktokScript function after the script is loaded\r\n      script.onload = () => {\r\n         this.tiktokScript(eventData);\r\n      };\r\n    },\r\n    async tiktokScript(eventData) {\r\n      let tiktokPixel = this.$config.TIKTOK_PIXEL;\r\n      !(function (w, d, t) {\r\n        w.TiktokAnalyticsObject = t\r\n        var ttq = (w[t] = w[t] || [])\r\n        ;(ttq.methods = [\r\n          'page',\r\n          'track',\r\n          'identify',\r\n          'instances',\r\n          'debug',\r\n          'on',\r\n          'off',\r\n          'once',\r\n          'ready',\r\n          'alias',\r\n          'group',\r\n          'enableCookie',\r\n          'disableCookie',\r\n        ]),\r\n          (ttq.setAndDefer = function (t, e) {\r\n            t[e] = function () {\r\n              t.push([e].concat(Array.prototype.slice.call(arguments, 0)))\r\n            }\r\n          })\r\n        for (var i = 0; i < ttq.methods.length; i++)\r\n          ttq.setAndDefer(ttq, ttq.methods[i])\r\n        ;(ttq.instance = function (t) {\r\n          for (var e = ttq._i[t] || [], n = 0; n < ttq.methods.length; n++)\r\n            ttq.setAndDefer(e, ttq.methods[n])\r\n          return e\r\n        }),\r\n          (ttq.load = function (e, n) {\r\n            var i = 'https://analytics.tiktok.com/i18n/pixel/events.js'\r\n            ;(ttq._i = ttq._i || {}),\r\n              (ttq._i[e] = []),\r\n              (ttq._i[e]._u = i),\r\n              (ttq._t = ttq._t || {}),\r\n              (ttq._t[e] = +new Date()),\r\n              (ttq._o = ttq._o || {}),\r\n              (ttq._o[e] = n || {})\r\n            var o = document.createElement('script')\r\n            ;(o.type = 'text/javascript'),\r\n              (o.async = !0),\r\n              (o.src = i + '?sdkid=' + e + '&lib=' + t)\r\n            var a = document.getElementsByTagName('script')[0]\r\n            a.parentNode.insertBefore(o, a)\r\n          })\r\n\r\n        //Part 2\r\n        ttq.load(tiktokPixel)\r\n        ttq.page(eventData)\r\n      })(window, document, 'ttq')\r\n    },\r\n    async trackTikTokEvent(eventName, amount, eventData, ip) {\r\n\r\n      const {\r\n        client_ip_address,\r\n        client_user_agent,\r\n        currency,\r\n        value,\r\n        contents,\r\n        content_type\r\n      } = eventData;\r\n\r\n      const {\r\n        content_id,\r\n        content_name,\r\n        price,\r\n      } = contents[0];\r\n\r\n      const em = this.user.email\r\n      const ph = this.user.email\r\n\r\n      try {\r\n          let window = window;\r\n          window.ttq.track(eventName, {\r\n           content_type,\r\n          contents: [{ content_id, content_name, price }],\r\n          client_ip_address,\r\n          client_user_agent,\r\n          currency,\r\n          value,\r\n          user: {\r\n            email: em,\r\n            phone: ph,\r\n          }\r\n        });\r\n\r\n        await this.tiktok_event_api(eventName, amount, this.user, eventData, ip);\r\n      \r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    },\r\n    async tiktok_event_api(track, amount = 0, user_data, eventData, ip) {\r\n      try {\r\n        let externalIdHashed = '';\r\n        let emailHashed = '';\r\n        let phoneHashed = '';\r\n        const ttpMatch = document.cookie.match(/_ttp=([^;]+)/);\r\n        const ttp = ttpMatch ? ttpMatch[1] : null;\r\n    \r\n        if (user_data?.email) {\r\n          externalIdHashed = this.hashing(Date.now().toString());\r\n          emailHashed = this.hashing(user_data.email);\r\n          phoneHashed = this.hashing(user_data.phone);\r\n        }\r\n    \r\n        const postData = {\r\n          data: {\r\n            pixel_code: 'CI0KR9RC77UCDSLJEN8G',\r\n            event: track,\r\n            event_id: (+new Date() + Math.floor(Math.random() * 1000)).toString(),\r\n            ...(ttp && user_data && {\r\n              user: {\r\n                external_id: externalIdHashed,\r\n                email: emailHashed,\r\n                phone_number: phoneHashed,\r\n                ttp: ttp\r\n              }\r\n            }),\r\n            context: {\r\n              page: {\r\n                url: window.location.href,\r\n                referrer: window.location.href\r\n              }\r\n            },\r\n            ipAddress: ip,\r\n            ...(amount > 0 && {\r\n              properties: {\r\n                content_type: 'product_group',\r\n                contents: eventData.contents,\r\n                currency: 'THB',\r\n                value: +amount\r\n              }\r\n            })\r\n          }\r\n        };\r\n\r\n        await this.$axios.$post(`/api/v1/conversion/tiktok`, postData);\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  },\r\n}\r\n </script>\r\n "],"mappings":";;;;;6DACKA,YAAA,CAASC,iBAAA,GACTD,YAAA,CAASE,iBAAA,GACTF,YAAA,CAAYG,oBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}