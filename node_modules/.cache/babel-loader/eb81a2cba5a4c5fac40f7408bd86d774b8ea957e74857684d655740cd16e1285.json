{"ast":null,"code":"//import { getAuth, onAuthStateChanged} from 'firebase/auth';\nimport { createRouter, createWebHistory, START_LOCATION } from \"vue-router\";\n//import store from './Store'\nimport Home from './components/FrontPage/home.vue';\nimport Contact from './components/FrontPage/contact.vue';\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [{\n    path: '/',\n    component: Home,\n    name: 'home'\n  }, {\n    path: '/contact',\n    component: Contact,\n    name: 'contact'\n    // meta: { requiresAuth: true },\n  }]\n});\n\n// const auth = getAuth();\n\n// const validateCheck = (to,from,next) => {\n//     if( to.meta.requiresAuth && !store.getters['auth/isAuth']){\n//         next('/');\n//     } else if( to.meta.requiresAuth && store.getters['auth/isAuth']){\n//         next('/contact');\n//     } else{\n//         next();\n//     }\n// }   \n\n// router.beforeEach((to,from,next)=>{\n//     if(from === START_LOCATION){\n//         const unsubscribe = onAuthStateChanged(auth, user => {\n//             if(user){\n//                 store.dispatch('auth/autosignin', { uid: user.uid }).then(() => {\n//                     validateCheck(to, from, next);\n//                 });\n//             } else {\n//                 validateCheck(to,from,next)\n//             }\n//         })\n//         unsubscribe();\n//     } else {\n//         validateCheck(to,from,next)\n//     }    \n// })\n\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","START_LOCATION","Home","Contact","router","history","routes","path","component","name"],"sources":["C:/Users/Ball/OneDrive/Documents/Web dev/own-website/src/routes.js"],"sourcesContent":["//import { getAuth, onAuthStateChanged} from 'firebase/auth';\r\nimport { createRouter, createWebHistory, START_LOCATION } from \"vue-router\";\r\n//import store from './Store'\r\nimport Home from './components/FrontPage/home.vue'\r\nimport Contact from './components/FrontPage/contact.vue'\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      component: Home,\r\n      name: 'home',\r\n    },\r\n    { \r\n        path: '/contact', \r\n        component: Contact, \r\n        name: 'contact',\r\n        // meta: { requiresAuth: true },\r\n      \r\n    }\r\n  ]\r\n});\r\n\r\n// const auth = getAuth();\r\n\r\n// const validateCheck = (to,from,next) => {\r\n//     if( to.meta.requiresAuth && !store.getters['auth/isAuth']){\r\n//         next('/');\r\n//     } else if( to.meta.requiresAuth && store.getters['auth/isAuth']){\r\n//         next('/contact');\r\n//     } else{\r\n//         next();\r\n//     }\r\n// }   \r\n\r\n\r\n// router.beforeEach((to,from,next)=>{\r\n//     if(from === START_LOCATION){\r\n//         const unsubscribe = onAuthStateChanged(auth, user => {\r\n//             if(user){\r\n//                 store.dispatch('auth/autosignin', { uid: user.uid }).then(() => {\r\n//                     validateCheck(to, from, next);\r\n//                 });\r\n//             } else {\r\n//                 validateCheck(to,from,next)\r\n//             }\r\n//         })\r\n//         unsubscribe();\r\n//     } else {\r\n//         validateCheck(to,from,next)\r\n//     }    \r\n// })\r\n\r\nexport default router;\r\n"],"mappings":"AAAA;AACA,SAASA,YAAY,EAAEC,gBAAgB,EAAEC,cAAc,QAAQ,YAAY;AAC3E;AACA,OAAOC,IAAI,MAAM,iCAAiC;AAClD,OAAOC,OAAO,MAAM,oCAAoC;AAExD,MAAMC,MAAM,GAAGL,YAAY,CAAC;EAC1BM,OAAO,EAAEL,gBAAgB,EAAE;EAC3BM,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,SAAS,EAAEN,IAAI;IACfO,IAAI,EAAE;EACR,CAAC,EACD;IACIF,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAEL,OAAO;IAClBM,IAAI,EAAE;IACN;EAEJ,CAAC;AAEL,CAAC,CAAC;;AAEF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}